node('hydra') {
     
   properties([parameters([stringParam(defaultValue: '3', description: 'number of hosts', name: 'hc'),])])
    def c = params.hc
    stage('test'){
        def hostname = []
        echo " count: ${c}"
        def al = hostname.size()
        echo "array size ${al}"
    if( "${c}" == "${al}" ) {echo "finished"}
        else {
            echo "not matched"
        def ui = input message: '', parameters: [string(defaultValue: 'web20', description: '', name: 'hostadd', trim: true)]
        echo "input value: ${ui}"
        
    hostname << "${ui}"
    println hostname
        }


                

    }
}

................................................................................................................................
Declarative pipeline
     
//    if ( "${params.hc}" != "${hostname.size()}" ) { }
pipeline {
     agent { label 'hydra'}
     environment {
        
        al = 'hostname.size()'
     }
    parameters {
        string(defaultValue: "3", description: 'What environment?', name: 'hc')
     string(defaultValue: "3", description: 'What environment?', name: 'hc1')
    }
    stages {
        stage("robot test") {
            steps {
                print params.hc     
                script {
                    hostname = ["1"]
                if ( "${params.hc}" != "${hostname.size()}" ) {
                    for (def element = 0; element < hostname.size(); element++) {
                            echo "${element} ${hostname.size()}"
                           
                            echo "${hostname.size()}"
                        }
                     hostname += "hai"
                                  }
                
                }
            }
        }
    }
}
